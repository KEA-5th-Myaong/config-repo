server:
  port: 9083

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
    enabled: false

spring:
  application:
    name: member-service # config repo의 디렉토리, 파일 이름과 맞춰야함

  cloud:
    config:
      enabled: true
    kubernetes:
      config:
        enabled: true
        namespace: popolog
      discovery:
        enabled: true
        all-namespaces: true
      loadbalancer:
        mode: service

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379 # redis

  datasource:
    url: ${DB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID} # js key
            client-secret: ${KAKAO_CLIENT_SECRET} # rest api key
            client-authentication-method: client_secret_post
            redirect-uri: ${BACK_URL}${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri:  ${BACK_URL}${GOOGLE_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

jwt:
  secret-key: ${JWT_SECRET_KEY}

springdoc:
  api-docs:
    version: openapi_3_1
    enabled: true
    path: /api-docs/v3/members
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, info, beans


redirect-url:
  reissue: ${BACK_URL}/auth/reissue
  main: ${FRONT_URL}/main
  login: ${FRONT_URL}/log-in
  profile-form: ${FRONT_URL}/sign-up/detail
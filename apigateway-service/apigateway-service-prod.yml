server:
  port: 8000

spring:
  application:
    name: apigateway-service # config repo의 디렉토리, 파일 이름과 맞춰야 함

  cloud:
    config:
      enabled: true
    kubernetes:
      config:
        enabled: true
        namespace: popolog
      discovery:
        enabled: true
        all-namespaces: true
      loadbalancer:
        mode: service

    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
              - "${FRONT_URL:http://172.16.210.30:3000}"
              - "${WORKER1_URL}"
              - "${WORKER2_URL}"
              - "${PROMETHEUS_URL}"
              # 모든 도메인 허용하려면 allowedOrigin이 아닌 allowedOriginPatterns 사용
            allowedHeaders: "*" # GET 이외의 요청에 필요
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS # Preflight 요청에 대한 CORS 에러 해결을 위해 적용
            allowCredentials: true

      routes:
        # 블로그 서비스
        - id: blog-service
          uri: lb://blog-service
          predicates:
            - Path=/blog/recent/**, /api-docs/v3/blog, /actuator-blog/prometheus
            - Method=GET

        - id: blog-service
          uri: lb://blog-service
          predicates:
            - Path=/blog/profiles/**, /blog/posts/**, /blog/search/**
            - Method=GET
          filters:
            - OptionalAuthorizationFilter

        - id: blog-service
          uri: lb://blog-service
          predicates:
            - Path=/admin/contents/**
          filters:
            - AuthorizationHeaderFilter

        # 문의 서비스
        - id: inquiry-service
          uri: lb://inquiry-service
          predicates:
            - Path=/inquiries/**, /api-docs/v3/inquiries, /actuator-inquiry/prometheus
            - Method=GET

        - id: inquiry-service
          uri: lb://inquiry-service
          predicates:
            - Path=/inquiries/**
          filters:
            - AuthorizationHeaderFilter

        - id: inquiry-service
          uri: lb://inquiry-service
          predicates:
            - Path=/admin/inquiries/**
          filters:
            - AuthorizationHeaderFilter

        # 모의 면접 서비스
        - id: interview-service
          uri: lb://interview-service
          predicates:
            - Path=/interviews/**
          filters:
            - AuthorizationHeaderFilter

        - id: interview-service
          uri: lb://interview-service
          predicates:
            - Path=/admin/companies/**
          filters:
            - AuthorizationHeaderFilter

        - id: interview-service
          uri: lb://interview-service
          predicates:
            - Path=/api-docs/v3/interviews, /actuator-interview/prometheus
            - Method=GET

        # 회원 및 인증 서비스
        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/auth/**, /login/**, /oauth2/**, /api-docs/v3/members, /actuator-member/prometheus, /tests/members/**

        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/members/**
          filters:
            - AuthorizationHeaderFilter

        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/admin/members/**, /admin/permission/**
          filters:
            - AuthorizationHeaderFilter

        # 공지사항 서비스
        - id: notice-service
          uri: lb://notice-service
          predicates:
            - Path=/notices/**, /api-docs/v3/notices, /actuator-notice/prometheus

        - id: notice-service
          uri: lb://notice-service
          predicates:
            - Path=/admin/notices/**
          filters:
            - AuthorizationHeaderFilter

        # 알림 서비스
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/notifications/**
          filters:
            - AuthorizationHeaderFilter

        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api-docs/v3/notifications, /actuator-notification/prometheus
            - Method=GET

        # 포트폴리오 서비스
        - id: portfolio-service
          uri: lb://portfolio-service
          predicates:
            - Path=/portfolios/**
          filters:
            - AuthorizationHeaderFilter

        - id: portfolio-service
          uri: lb://portfolio-service
          predicates:
            - Path=/api-docs/v3/portfolios, /actuator-portfolio/prometheus
            - Method=GET

        # 관심 직군 서비스
        - id: prejobs-service
          uri: lb://prejobs-service
          predicates:
            - Path=/pre-jobs/**
          filters:
            - AuthorizationHeaderFilter

        - id: prejobs-service
          uri: lb://prejobs-service
          predicates:
            - Path=/admin/jobs/**
          filters:
            - AuthorizationHeaderFilter

        - id: prejobs-service
          uri: lb://prejobs-service
          predicates:
            - Path=/api-docs/v3/pre-jobs, /actuator-prejobs/prometheus
            - Method=GET

        # 자기소개서 서비스
        - id: ps-service
          uri: lb://ps-service
          predicates:
            - Path=/ps/**
          filters:
            - AuthorizationHeaderFilter

        # 자기소개서 서비스
        - id: ps-service
          uri: lb://ps-service
          predicates:
            - Path=/api-docs/v3/ps, /actuator-ps/prometheus
            - Method=GET

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
    enabled: false

springdoc:
  swagger-ui:
    use-root-path: true
    urls[0]:
      name: blog-service
      url: /api-docs/v3/blog
    urls[1]:
      name: inquiry-service
      url: /api-docs/v3/inquiries
    urls[2]:
      name: interview-service
      url: /api-docs/v3/interviews
    urls[3]:
      name: member-service
      url: /api-docs/v3/members
    urls[4]:
      name: notice-service
      url: /api-docs/v3/notices
    urls[5]:
      name: notification-service
      url: /api-docs/v3/notifications
    urls[6]:
      name: portfolio-service
      url: /api-docs/v3/portfolios
    urls[7]:
      name: prejobs-service
      url: /api-docs/v3/pre-jobs
    urls[8]:
      name: ps-service
      url: /api-docs/v3/ps

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, info, beans, prometheus
      base-path: /actuator-gateway
  metrics:
    tags:
      application: ${spring.application.name}

jwt:
  secret-key: ${JWT_SECRET_KEY}

redirect-url:
  reissue: ${BACK_URL}/auth/reissue
  main: ${FRONT_URL}/main
  login: ${FRONT_URL}/log-in
  profile-form: ${FRONT_URL}/sign-up/detail

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - [%thread] - %logger{36} - %msg%n"
  level:
    root: INFO
